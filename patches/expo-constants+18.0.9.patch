diff --git a/node_modules/expo-constants/scripts/get-app-config-ios.sh b/node_modules/expo-constants/scripts/get-app-config-ios.sh
index b612e09..e9e93c2 100755
--- a/node_modules/expo-constants/scripts/get-app-config-ios.sh
+++ b/node_modules/expo-constants/scripts/get-app-config-ios.sh
@@ -6,12 +6,18 @@ DEST="$CONFIGURATION_BUILD_DIR"
 RESOURCE_BUNDLE_NAME="EXConstants.bundle"
 EXPO_CONSTANTS_PACKAGE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)"
 
+# Xcode exports some paths with escaped spaces (e.g. "My\\ Project").
+# Normalise them here so subsequent commands can use the actual file system paths.
+if [[ -n "$PROJECT_DIR" ]]; then
+  PROJECT_DIR="${PROJECT_DIR//\\ / }"
+fi
+
 # For classic main project build phases integration, will be no-op to prevent duplicated app.config creation.
 #
 # `$PROJECT_DIR` is passed by Xcode as the directory to the xcodeproj file.
 # in classic main project setup it is something like /path/to/app/ios
 # in new style pod project setup it is something like /path/to/app/ios/Pods
-PROJECT_DIR_BASENAME=$(basename $PROJECT_DIR)
+PROJECT_DIR_BASENAME=$(basename "$PROJECT_DIR")
 if [ "x$PROJECT_DIR_BASENAME" != "xPods" ]; then
   exit 0
 fi
@@ -20,6 +26,10 @@ fi
 PROJECT_ROOT=${PROJECT_ROOT:-"$PROJECT_DIR/../.."}
 PROJECT_ROOT=${PROJECT_ROOT:-"$EXPO_CONSTANTS_PACKAGE_DIR/../.."}
 
+if [[ -n "$PROJECT_ROOT" ]]; then
+  PROJECT_ROOT="${PROJECT_ROOT//\\ / }"
+fi
+
 cd "$PROJECT_ROOT" || exit
 
 if [ "$BUNDLE_FORMAT" == "shallow" ]; then
